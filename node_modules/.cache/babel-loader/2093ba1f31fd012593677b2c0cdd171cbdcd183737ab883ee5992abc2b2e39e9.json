{"ast":null,"code":"const OnInputPhone = e => {\n  let value = e.target.value.replace(/[^0-9]/g, ''); // Remove non-numeric characters\n  value = value.slice(0, 10); // Limit maximum length to 12 characters\n\n  if (value.length > 3) {\n    value = value.slice(0, 3) + '-' + value.slice(3);\n  }\n  if (value.length > 7) {\n    value = value.slice(0, 7) + '-' + value.slice(7);\n  }\n  e.target.value = value;\n};\n_c = OnInputPhone;\nexport { OnInputPhone };\nvar _c;\n$RefreshReg$(_c, \"OnInputPhone\");","map":{"version":3,"names":["OnInputPhone","e","value","target","replace","slice","length","_c","$RefreshReg$"],"sources":["/Users/fabtest/Documents/project/isentcare-main/src/modules/FormHelpers.js"],"sourcesContent":["const OnInputPhone=(e) => {\n    let value = e.target.value.replace(/[^0-9]/g, ''); // Remove non-numeric characters\n    value = value.slice(0, 10); // Limit maximum length to 12 characters\n\n    if (value.length > 3) {\n      value = value.slice(0, 3) + '-' + value.slice(3);\n    }\n    if (value.length > 7) {\n      value = value.slice(0, 7) + '-' + value.slice(7);\n    }\n\n    e.target.value = value;\n  }\n\n  export {OnInputPhone}"],"mappings":"AAAA,MAAMA,YAAY,GAAEC,CAAC,IAAK;EACtB,IAAIC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACD,KAAK,CAACE,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;EACnDF,KAAK,GAAGA,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAE5B,IAAIH,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE;IACpBJ,KAAK,GAAGA,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAGH,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC;EAClD;EACA,IAAIH,KAAK,CAACI,MAAM,GAAG,CAAC,EAAE;IACpBJ,KAAK,GAAGA,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAGH,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC;EAClD;EAEAJ,CAAC,CAACE,MAAM,CAACD,KAAK,GAAGA,KAAK;AACxB,CAAC;AAAAK,EAAA,GAZGP,YAAY;AAchB,SAAQA,YAAY;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}