{"ast":null,"code":"import Papa from 'papaparse';\nfunction generateCSV(data, keysAndHeaders, name) {\n  //console.log(data,\"data\");\n  const transformedData = data.map(item => {\n    let newItem = {};\n    for (const key in item) {\n      if (keysAndHeaders[key]) {\n        newItem[keysAndHeaders[key]] = item[key];\n      }\n    }\n    return newItem;\n  });\n  const csv = Papa.unparse(transformedData);\n  downloadCSV(csv, name);\n}\nfunction downloadCSV(csv, name) {\n  const blob = new Blob([csv], {\n    type: 'text/csv'\n  });\n  const url = URL.createObjectURL(blob);\n  const link = document.createElement('a');\n  link.href = url;\n  link.download = `${name}.csv`;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\nexport { generateCSV };","map":{"version":3,"names":["Papa","generateCSV","data","keysAndHeaders","name","transformedData","map","item","newItem","key","csv","unparse","downloadCSV","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild"],"sources":["/Users/fabtest/Documents/project/isentcare-main/src/modules/csvHelpers.js"],"sourcesContent":["\nimport Papa from 'papaparse';\n\nfunction generateCSV(data,keysAndHeaders,name){\n    //console.log(data,\"data\");\n    const transformedData = data.map(item => {\n      let newItem = {};\n      for (const key in item) {\n        if (keysAndHeaders[key]) {\n          newItem[keysAndHeaders[key]] = item[key];\n        }\n      }\n      return newItem;\n    });\n    const csv = Papa.unparse(transformedData);\n    downloadCSV(csv,name)\n  \n  }\n  function downloadCSV(csv,name) {\n    const blob = new Blob([csv], { type: 'text/csv' });\n  \n  const url = URL.createObjectURL(blob);\n  \n  const link = document.createElement('a');\n  link.href = url;\n  link.download = `${name}.csv`;\n  \n  document.body.appendChild(link);\n  \n  link.click();\n  \n  document.body.removeChild(link);\n  }\n\n\n\n export {generateCSV}"],"mappings":"AACA,OAAOA,IAAI,MAAM,WAAW;AAE5B,SAASC,WAAWA,CAACC,IAAI,EAACC,cAAc,EAACC,IAAI,EAAC;EAC1C;EACA,MAAMC,eAAe,GAAGH,IAAI,CAACI,GAAG,CAACC,IAAI,IAAI;IACvC,IAAIC,OAAO,GAAG,CAAC,CAAC;IAChB,KAAK,MAAMC,GAAG,IAAIF,IAAI,EAAE;MACtB,IAAIJ,cAAc,CAACM,GAAG,CAAC,EAAE;QACvBD,OAAO,CAACL,cAAc,CAACM,GAAG,CAAC,CAAC,GAAGF,IAAI,CAACE,GAAG,CAAC;MAC1C;IACF;IACA,OAAOD,OAAO;EAChB,CAAC,CAAC;EACF,MAAME,GAAG,GAAGV,IAAI,CAACW,OAAO,CAACN,eAAe,CAAC;EACzCO,WAAW,CAACF,GAAG,EAACN,IAAI,CAAC;AAEvB;AACA,SAASQ,WAAWA,CAACF,GAAG,EAACN,IAAI,EAAE;EAC7B,MAAMS,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,GAAG,CAAC,EAAE;IAAEK,IAAI,EAAE;EAAW,CAAC,CAAC;EAEpD,MAAMC,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;EAErC,MAAMM,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EACxCF,IAAI,CAACG,IAAI,GAAGN,GAAG;EACfG,IAAI,CAACI,QAAQ,GAAI,GAAEnB,IAAK,MAAK;EAE7BgB,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,IAAI,CAAC;EAE/BA,IAAI,CAACO,KAAK,EAAE;EAEZN,QAAQ,CAACI,IAAI,CAACG,WAAW,CAACR,IAAI,CAAC;AAC/B;AAID,SAAQlB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}