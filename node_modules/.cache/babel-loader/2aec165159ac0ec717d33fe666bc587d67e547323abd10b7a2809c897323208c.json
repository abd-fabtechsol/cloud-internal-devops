{"ast":null,"code":"var _jsxFileName = \"/Users/fabtest/Documents/project/isentcare-main/src/socket/SocketProvider.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useCallback, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext({\n  socket: null,\n  isConnected: false,\n  subscribe: () => {},\n  unsubscribe: () => {}\n});\nconst SocketProvider = _ref => {\n  _s();\n  let {\n    children,\n    token\n  } = _ref;\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const subscribers = useRef([]);\n\n  // Function to create and initialize the WebSocket connection\n  const initializeWebSocket = useCallback(socketUrl => {\n    let ws = new WebSocket(socketUrl);\n    ws.onopen = () => {\n      setIsConnected(true);\n    };\n    ws.onmessage = event => {\n      // Dispatch the received message to all subscribers\n      subscribers.current.forEach(callback => {\n        callback(event.data);\n      });\n    };\n    ws.onclose = () => {\n      setIsConnected(false);\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n      // toast.error('Failed To Connect Live Server Please Reload!!');\n    };\n\n    setSocket(ws);\n    return () => {\n      ws.close();\n      setSocket(null);\n      setIsConnected(false);\n    };\n  }, []);\n  useEffect(() => {\n    // Create and initialize the WebSocket connection\n    const queryParams = new URLSearchParams();\n    if (token) {\n      queryParams.set('token', token);\n    } else {\n      queryParams.set('flag', 'New_CA');\n    }\n    const socketUrl = `${process.env.REACT_APP_SOCKET_URL}/?${queryParams.toString()}`;\n    // initializeWebSocket(socketUrl);\n    // console.log(\"connected\",socketUrl);\n    // Clean up the previous WebSocket connection when the token changes\n    return () => {\n      if (socket) {\n        socket.close();\n        setSocket(null);\n        setIsConnected(false);\n      }\n    };\n  }, [token, initializeWebSocket]);\n  const subscribe = useCallback(callback => {\n    subscribers.current.push(callback);\n  }, []);\n  const unsubscribe = useCallback(callback => {\n    subscribers.current = subscribers.current.filter(subscriber => subscriber !== callback);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      socket,\n      isConnected,\n      subscribe,\n      unsubscribe\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(SocketProvider, \"hYgFmurRD5s4dVjqsXuMy+WGFFk=\");\n_c = SocketProvider;\nexport { SocketContext, SocketProvider };\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useCallback","useEffect","useRef","useState","toast","jsxDEV","_jsxDEV","SocketContext","socket","isConnected","subscribe","unsubscribe","SocketProvider","_ref","_s","children","token","setSocket","setIsConnected","subscribers","initializeWebSocket","socketUrl","ws","WebSocket","onopen","onmessage","event","current","forEach","callback","data","onclose","onerror","error","console","close","queryParams","URLSearchParams","set","process","env","REACT_APP_SOCKET_URL","toString","push","filter","subscriber","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fabtest/Documents/project/isentcare-main/src/socket/SocketProvider.js"],"sourcesContent":["import React, { createContext, useCallback, useEffect, useRef, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nconst SocketContext = createContext({\n  socket: null,\n  isConnected: false,\n  subscribe: () => {},\n  unsubscribe: () => {},\n});\n\nconst SocketProvider = ({ children, token }) => {\n  const [socket, setSocket] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const subscribers = useRef([]);\n\n  // Function to create and initialize the WebSocket connection\n  const initializeWebSocket = useCallback((socketUrl) => {\n    let ws = new WebSocket(socketUrl);\n\n    ws.onopen = () => {\n      setIsConnected(true);\n    };\n\n    ws.onmessage = (event) => {\n      // Dispatch the received message to all subscribers\n      subscribers.current.forEach((callback) => {\n        callback(event.data);\n      });\n    };\n\n    ws.onclose = () => {\n      setIsConnected(false);\n    };\n\n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n      // toast.error('Failed To Connect Live Server Please Reload!!');\n    };\n\n    setSocket(ws);\n\n    return () => {\n      ws.close();\n      setSocket(null);\n      setIsConnected(false);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Create and initialize the WebSocket connection\n    const queryParams = new URLSearchParams();\n    if (token) {\n      queryParams.set('token', token);\n    } else {\n      queryParams.set('flag', 'New_CA');\n    }\n    const socketUrl = `${process.env.REACT_APP_SOCKET_URL}/?${queryParams.toString()}`;\n    // initializeWebSocket(socketUrl);\n// console.log(\"connected\",socketUrl);\n    // Clean up the previous WebSocket connection when the token changes\n    return () => {\n      if (socket) {\n        socket.close();\n        setSocket(null);\n        setIsConnected(false);\n      }\n    };\n  }, [token, initializeWebSocket]);\n\n  const subscribe = useCallback((callback) => {\n    subscribers.current.push(callback);\n  }, []);\n\n  const unsubscribe = useCallback((callback) => {\n    subscribers.current = subscribers.current.filter((subscriber) => subscriber !== callback);\n  }, []);\n\n  return (\n    <SocketContext.Provider value={{ socket, isConnected, subscribe, unsubscribe }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport { SocketContext, SocketProvider };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}