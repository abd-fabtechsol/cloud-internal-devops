{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport apiClient from \"../api/apiClient\";\nimport { logout } from \"../redux/counterSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nexport default function AuthValidator() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    isLoggedIn\n  } = useSelector(state => state.auth);\n  useEffect(() => {\n    if (isLoggedIn) fetchUserInfo();\n  }, []);\n  async function fetchUserInfo() {\n    var _result$data, _result$data2;\n    const result = await apiClient.get(\"/UserInfo/\");\n    //console.log(result);\n    if ((result === null || result === void 0 ? void 0 : (_result$data = result.data) === null || _result$data === void 0 ? void 0 : _result$data.detail) == \"Invalid token.\") {\n      toast.error(\"Login Expired Please try again\");\n      dispatch(logout());\n    } else if ((result === null || result === void 0 ? void 0 : (_result$data2 = result.data) === null || _result$data2 === void 0 ? void 0 : _result$data2.detail) == \"User inactive or deleted.\") {\n      toast.error(\"User inactive or deleted.\");\n      dispatch(logout());\n    }\n  }\n}\n_s(AuthValidator, \"MgZriBeHH2hrw82TIpVXOqEvR1k=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = AuthValidator;\nvar _c;\n$RefreshReg$(_c, \"AuthValidator\");","map":{"version":3,"names":["useEffect","useLocation","apiClient","logout","useDispatch","useSelector","toast","AuthValidator","_s","dispatch","isLoggedIn","state","auth","fetchUserInfo","_result$data","_result$data2","result","get","data","detail","error","_c","$RefreshReg$"],"sources":["/Users/fabtest/Documents/project/isentcare-main/src/modules/AuthValidator.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport apiClient from \"../api/apiClient\";\nimport { logout } from \"../redux/counterSlice\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\n\nexport default function AuthValidator() {\n  const dispatch=useDispatch()\n  const {isLoggedIn}=useSelector(state=>state.auth)\n\n  useEffect(() => {\n    if(isLoggedIn)\nfetchUserInfo()\n  }, []);\n\n async function fetchUserInfo() {\n\n    const result=await apiClient.get(\"/UserInfo/\")\n    //console.log(result);\n    if(result?.data?.detail==\"Invalid token.\"){\ntoast.error(\"Login Expired Please try again\")\n      dispatch(logout())\n    }else\n    if(result?.data?.detail==\"User inactive or deleted.\"){\ntoast.error(\"User inactive or deleted.\")\n      dispatch(logout())\n    }\n    \n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,kBAAkB;AACxC,SAASC,MAAM,QAAQ,uBAAuB;AAC9C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAMC,QAAQ,GAACL,WAAW,EAAE;EAC5B,MAAM;IAACM;EAAU,CAAC,GAACL,WAAW,CAACM,KAAK,IAAEA,KAAK,CAACC,IAAI,CAAC;EAEjDZ,SAAS,CAAC,MAAM;IACd,IAAGU,UAAU,EACjBG,aAAa,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAEP,eAAeA,aAAaA,CAAA,EAAG;IAAA,IAAAC,YAAA,EAAAC,aAAA;IAE5B,MAAMC,MAAM,GAAC,MAAMd,SAAS,CAACe,GAAG,CAAC,YAAY,CAAC;IAC9C;IACA,IAAG,CAAAD,MAAM,aAANA,MAAM,wBAAAF,YAAA,GAANE,MAAM,CAAEE,IAAI,cAAAJ,YAAA,uBAAZA,YAAA,CAAcK,MAAM,KAAE,gBAAgB,EAAC;MAC9Cb,KAAK,CAACc,KAAK,CAAC,gCAAgC,CAAC;MACvCX,QAAQ,CAACN,MAAM,EAAE,CAAC;IACpB,CAAC,MACD,IAAG,CAAAa,MAAM,aAANA,MAAM,wBAAAD,aAAA,GAANC,MAAM,CAAEE,IAAI,cAAAH,aAAA,uBAAZA,aAAA,CAAcI,MAAM,KAAE,2BAA2B,EAAC;MACzDb,KAAK,CAACc,KAAK,CAAC,2BAA2B,CAAC;MAClCX,QAAQ,CAACN,MAAM,EAAE,CAAC;IACpB;EAEF;AACF;AAACK,EAAA,CAvBuBD,aAAa;EAAA,QACpBH,WAAW,EACPC,WAAW;AAAA;AAAAgB,EAAA,GAFRd,aAAa;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}